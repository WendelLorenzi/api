directive @isAuth on FIELD_DEFINITION
directive @recaptcha on FIELD_DEFINITION

scalar DateTime
scalar Email

type Booking {
  _id: ID!
  event: Event!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Event {
  _id: ID!
  title: String!
  description: String!
  price: Float!
  date: DateTime!
  creator: User!
}

type User {
  _id: ID!
  email: Email!
  createdEvents: [Event!]
}

type AuthData {
  userId: ID!
  token: String!
  tokenExpiration: Int!
}

input EventInput {
  title: String!
  description: String!
  price: Float!
  date: DateTime!
}

type Produto {
  _id: ID!
  name: String!
  price: Float!
  disableSize: Boolean
  img: [String!]
}

input ProdutoInput {
  name: String!
  price: Float!
  disableSize: Boolean
  img: [String!]!
}

input ProdutoPedidoInput {
  _id: ID!
  size: String
}

input PedidoInput {
  email: Email!
  name: String!
  number: String!
  products: [ProdutoPedidoInput!]!
}

input UpdateEventInput {
  _id: ID!
  event: EventInput!
}

type ProductOrder {
  product: Produto
  size: String
}

type Order {
  email: Email
  name: String
  number: String
  products: [ProductOrder]
  _id: ID!
  isVerified: Boolean
}

type Query {
  events: [Event!]!
  bookings: [Booking!]! @isAuth
  login(email: Email!, password: String!): AuthData! @recaptcha


  status: Boolean

  products: [Produto]
  orders: [Order] @isAuth
}

type Mutation {
  createEvent(eventInput: EventInput!): Event! @isAuth
  updateEvent(input: UpdateEventInput!): Event! @isAuth
  createUser(email: Email!, password: String!): User @recaptcha
  bookEvent(eventId: ID!): Booking! @isAuth
  cancelBooking(bookingId: ID!): Event! @isAuth


  turnOn(relay: Int!): Boolean
  turnOff(relay: Int!): Boolean

  createProduct(produto: ProdutoInput!): Produto @isAuth
  deleteProduct(id: ID!): Boolean @isAuth
  createOrder(input: PedidoInput!): Boolean @recaptcha

  verify(verification: String!): Boolean
}

type NewValue {
  name: String!
  value: Float!
}

type Subscription {
  newEvent: Event!
  updatedEvent: Event!

  newValue: NewValue!
}
